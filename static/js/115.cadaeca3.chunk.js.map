{"version":3,"file":"static/js/115.cadaeca3.chunk.js","mappings":"mMAIMA,E,OAAgBC,EAAAA,OAAa,CACjCC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAsB,WAAH,OAC9BL,EAAcM,IAAI,yBAA0B,EACjCC,EAAe,SAAAC,GAAK,OAC/BR,EAAcM,IAAI,wBAAyB,CAAEH,OAAQ,CAAEK,MAAAA,IAAW,C,yGC+BpE,UAzCe,WACb,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BD,EAAKG,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,GAAUC,EAAAA,EAAAA,MAEVC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACfpB,EAAM,CAADkB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEkBrB,EAAAA,EAAAA,IAAaC,GAAO,KAAD,EAApCiB,EAAQC,EAAAG,KACdZ,EAAWQ,EAASK,KAAKd,SAASU,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAElCM,QAAQC,MAAM,0BAAyBP,EAAAK,IAAS,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAGrD,kBATiB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAelB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAOjC,EACPkC,SAAU,SAAAC,GAAC,OAAI9B,EAAS8B,EAAEC,OAAOH,MAAM,KAEzCF,EAAAA,EAAAA,KAAA,UAAQM,QAASzB,EAAakB,SAAC,YAE/BC,EAAAA,EAAAA,KAAA,MAAAD,SACGtB,EAAQ8B,KAAI,SAAAC,GAAK,OAChBR,EAAAA,EAAAA,KAAA,MAAmBM,QAAS,kBAhBXG,EAgBkCD,EAAME,QAf/D/B,EAAQgC,KAAK,WAADC,OAAYH,IADD,IAAAA,CAgB2C,EAACV,SAC1DS,EAAMK,OADAL,EAAME,GAEV,QAKf,C","sources":["components/Api/Api.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'dfced028369c4b906b9773d4a7a301c6';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendingMovies = () =>\n  axiosInstance.get('/trending/get-trending');\nexport const searchMovies = query =>\n  axiosInstance.get('/search/search-movies', { params: { query } });\nexport const getMovieDetails = movieId =>\n  axiosInstance.get(`/movies/get-movie-details/${movieId}`);\nexport const getMovieCredits = movieId =>\n  axiosInstance.get(`/movies/get-movie-credits/${movieId}`);\nexport const getMovieReviews = movieId =>\n  axiosInstance.get(`/movies/get-movie-reviews/${movieId}`);\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { searchMovies } from 'components/Api/Api';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const history = useNavigate();\n\n  const handleSearch = async () => {\n    if (query) {\n      try {\n        const response = await searchMovies(query);\n        setResults(response.data.results);\n      } catch (error) {\n        console.error('Error searching movies:', error);\n      }\n    }\n  };\n\n  const handleMovieClick = movieId => {\n    history.push(`/movies/${movieId}`);\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n\n      <ul>\n        {results.map(movie => (\n          <li key={movie.id} onClick={() => handleMovieClick(movie.id)}>\n            {movie.title}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axiosInstance","axios","baseURL","params","api_key","fetchTrendingMovies","get","searchMovies","query","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","results","setResults","history","useNavigate","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","data","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","type","value","onChange","e","target","onClick","map","movie","movieId","id","push","concat","title"],"sourceRoot":""}